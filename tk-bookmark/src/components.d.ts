/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface TkAddLabel {
    }
    interface TkAddOrEditBookmark {
        "bookmark": any;
        "existingTags": any;
        "forNewBookmark": boolean;
        "hideNextButton": boolean;
        "overrideState": any;
    }
    interface TkAddTags {
        "currentTags": any;
        "existingTags": any;
        "getTags": () => Promise<any[]>;
    }
    interface TkAppSplash {
    }
    interface TkBookmark {
    }
    interface TkBookmarkAppRoot {
    }
    interface TkBookmarkBar {
    }
    interface TkBookmarkLabel {
    }
    interface TkBookmarkLabelBar {
    }
    interface TkBookmarkList {
        "reloadBookmarkList": () => Promise<void>;
        "setLabelFilterList": (list: any) => Promise<void>;
    }
    interface TkBookmarkListItem {
        "bookmark": any;
    }
    interface TkBookmarkTable {
        "staticTableData": any[];
    }
    interface TkLabelList {
        "isEditMode": boolean;
        "reloadLabelList": () => Promise<void>;
    }
    interface TkTable {
        "headers": any[];
        "tableData": any[];
    }
}
export interface TkAddLabelCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkAddLabelElement;
}
export interface TkAddOrEditBookmarkCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkAddOrEditBookmarkElement;
}
export interface TkAddTagsCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkAddTagsElement;
}
export interface TkAppSplashCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkAppSplashElement;
}
export interface TkBookmarkBarCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkBookmarkBarElement;
}
export interface TkBookmarkLabelBarCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkBookmarkLabelBarElement;
}
export interface TkBookmarkListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkBookmarkListElement;
}
export interface TkBookmarkListItemCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkBookmarkListItemElement;
}
export interface TkLabelListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkLabelListElement;
}
declare global {
    interface HTMLTkAddLabelElement extends Components.TkAddLabel, HTMLStencilElement {
    }
    var HTMLTkAddLabelElement: {
        prototype: HTMLTkAddLabelElement;
        new (): HTMLTkAddLabelElement;
    };
    interface HTMLTkAddOrEditBookmarkElement extends Components.TkAddOrEditBookmark, HTMLStencilElement {
    }
    var HTMLTkAddOrEditBookmarkElement: {
        prototype: HTMLTkAddOrEditBookmarkElement;
        new (): HTMLTkAddOrEditBookmarkElement;
    };
    interface HTMLTkAddTagsElement extends Components.TkAddTags, HTMLStencilElement {
    }
    var HTMLTkAddTagsElement: {
        prototype: HTMLTkAddTagsElement;
        new (): HTMLTkAddTagsElement;
    };
    interface HTMLTkAppSplashElement extends Components.TkAppSplash, HTMLStencilElement {
    }
    var HTMLTkAppSplashElement: {
        prototype: HTMLTkAppSplashElement;
        new (): HTMLTkAppSplashElement;
    };
    interface HTMLTkBookmarkElement extends Components.TkBookmark, HTMLStencilElement {
    }
    var HTMLTkBookmarkElement: {
        prototype: HTMLTkBookmarkElement;
        new (): HTMLTkBookmarkElement;
    };
    interface HTMLTkBookmarkAppRootElement extends Components.TkBookmarkAppRoot, HTMLStencilElement {
    }
    var HTMLTkBookmarkAppRootElement: {
        prototype: HTMLTkBookmarkAppRootElement;
        new (): HTMLTkBookmarkAppRootElement;
    };
    interface HTMLTkBookmarkBarElement extends Components.TkBookmarkBar, HTMLStencilElement {
    }
    var HTMLTkBookmarkBarElement: {
        prototype: HTMLTkBookmarkBarElement;
        new (): HTMLTkBookmarkBarElement;
    };
    interface HTMLTkBookmarkLabelElement extends Components.TkBookmarkLabel, HTMLStencilElement {
    }
    var HTMLTkBookmarkLabelElement: {
        prototype: HTMLTkBookmarkLabelElement;
        new (): HTMLTkBookmarkLabelElement;
    };
    interface HTMLTkBookmarkLabelBarElement extends Components.TkBookmarkLabelBar, HTMLStencilElement {
    }
    var HTMLTkBookmarkLabelBarElement: {
        prototype: HTMLTkBookmarkLabelBarElement;
        new (): HTMLTkBookmarkLabelBarElement;
    };
    interface HTMLTkBookmarkListElement extends Components.TkBookmarkList, HTMLStencilElement {
    }
    var HTMLTkBookmarkListElement: {
        prototype: HTMLTkBookmarkListElement;
        new (): HTMLTkBookmarkListElement;
    };
    interface HTMLTkBookmarkListItemElement extends Components.TkBookmarkListItem, HTMLStencilElement {
    }
    var HTMLTkBookmarkListItemElement: {
        prototype: HTMLTkBookmarkListItemElement;
        new (): HTMLTkBookmarkListItemElement;
    };
    interface HTMLTkBookmarkTableElement extends Components.TkBookmarkTable, HTMLStencilElement {
    }
    var HTMLTkBookmarkTableElement: {
        prototype: HTMLTkBookmarkTableElement;
        new (): HTMLTkBookmarkTableElement;
    };
    interface HTMLTkLabelListElement extends Components.TkLabelList, HTMLStencilElement {
    }
    var HTMLTkLabelListElement: {
        prototype: HTMLTkLabelListElement;
        new (): HTMLTkLabelListElement;
    };
    interface HTMLTkTableElement extends Components.TkTable, HTMLStencilElement {
    }
    var HTMLTkTableElement: {
        prototype: HTMLTkTableElement;
        new (): HTMLTkTableElement;
    };
    interface HTMLElementTagNameMap {
        "tk-add-label": HTMLTkAddLabelElement;
        "tk-add-or-edit-bookmark": HTMLTkAddOrEditBookmarkElement;
        "tk-add-tags": HTMLTkAddTagsElement;
        "tk-app-splash": HTMLTkAppSplashElement;
        "tk-bookmark": HTMLTkBookmarkElement;
        "tk-bookmark-app-root": HTMLTkBookmarkAppRootElement;
        "tk-bookmark-bar": HTMLTkBookmarkBarElement;
        "tk-bookmark-label": HTMLTkBookmarkLabelElement;
        "tk-bookmark-label-bar": HTMLTkBookmarkLabelBarElement;
        "tk-bookmark-list": HTMLTkBookmarkListElement;
        "tk-bookmark-list-item": HTMLTkBookmarkListItemElement;
        "tk-bookmark-table": HTMLTkBookmarkTableElement;
        "tk-label-list": HTMLTkLabelListElement;
        "tk-table": HTMLTkTableElement;
    }
}
declare namespace LocalJSX {
    interface TkAddLabel {
        "onAddLabelSuccess"?: (event: TkAddLabelCustomEvent<any>) => void;
    }
    interface TkAddOrEditBookmark {
        "bookmark"?: any;
        "existingTags"?: any;
        "forNewBookmark"?: boolean;
        "hideNextButton"?: boolean;
        "onAddBookmarkSuccess"?: (event: TkAddOrEditBookmarkCustomEvent<any>) => void;
        "onCloseAddBookmark"?: (event: TkAddOrEditBookmarkCustomEvent<any>) => void;
        "onNotifyUpdateRequestObject"?: (event: TkAddOrEditBookmarkCustomEvent<any>) => void;
        "overrideState"?: any;
    }
    interface TkAddTags {
        "currentTags"?: any;
        "existingTags"?: any;
        "onNotifyUpdateTags"?: (event: TkAddTagsCustomEvent<any>) => void;
    }
    interface TkAppSplash {
        "onRequestLoginAsGuest"?: (event: TkAppSplashCustomEvent<any>) => void;
    }
    interface TkBookmark {
    }
    interface TkBookmarkAppRoot {
    }
    interface TkBookmarkBar {
        "onToggleBookmarkMode"?: (event: TkBookmarkBarCustomEvent<any>) => void;
    }
    interface TkBookmarkLabel {
    }
    interface TkBookmarkLabelBar {
        "onToggleLabelMode"?: (event: TkBookmarkLabelBarCustomEvent<any>) => void;
    }
    interface TkBookmarkList {
        "onDeleteBookmarkSuccess"?: (event: TkBookmarkListCustomEvent<any>) => void;
        "onUpdateBookmarkSuccess"?: (event: TkBookmarkListCustomEvent<any>) => void;
    }
    interface TkBookmarkListItem {
        "bookmark"?: any;
        "onRequestEditBookmark"?: (event: TkBookmarkListItemCustomEvent<any>) => void;
    }
    interface TkBookmarkTable {
        "staticTableData"?: any[];
    }
    interface TkLabelList {
        "isEditMode"?: boolean;
        "onDeleteLabelSuccess"?: (event: TkLabelListCustomEvent<any>) => void;
        "onNotifyLabelSelection"?: (event: TkLabelListCustomEvent<any>) => void;
        "onUpdateLabelSuccess"?: (event: TkLabelListCustomEvent<any>) => void;
    }
    interface TkTable {
        "headers"?: any[];
        "tableData"?: any[];
    }
    interface IntrinsicElements {
        "tk-add-label": TkAddLabel;
        "tk-add-or-edit-bookmark": TkAddOrEditBookmark;
        "tk-add-tags": TkAddTags;
        "tk-app-splash": TkAppSplash;
        "tk-bookmark": TkBookmark;
        "tk-bookmark-app-root": TkBookmarkAppRoot;
        "tk-bookmark-bar": TkBookmarkBar;
        "tk-bookmark-label": TkBookmarkLabel;
        "tk-bookmark-label-bar": TkBookmarkLabelBar;
        "tk-bookmark-list": TkBookmarkList;
        "tk-bookmark-list-item": TkBookmarkListItem;
        "tk-bookmark-table": TkBookmarkTable;
        "tk-label-list": TkLabelList;
        "tk-table": TkTable;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "tk-add-label": LocalJSX.TkAddLabel & JSXBase.HTMLAttributes<HTMLTkAddLabelElement>;
            "tk-add-or-edit-bookmark": LocalJSX.TkAddOrEditBookmark & JSXBase.HTMLAttributes<HTMLTkAddOrEditBookmarkElement>;
            "tk-add-tags": LocalJSX.TkAddTags & JSXBase.HTMLAttributes<HTMLTkAddTagsElement>;
            "tk-app-splash": LocalJSX.TkAppSplash & JSXBase.HTMLAttributes<HTMLTkAppSplashElement>;
            "tk-bookmark": LocalJSX.TkBookmark & JSXBase.HTMLAttributes<HTMLTkBookmarkElement>;
            "tk-bookmark-app-root": LocalJSX.TkBookmarkAppRoot & JSXBase.HTMLAttributes<HTMLTkBookmarkAppRootElement>;
            "tk-bookmark-bar": LocalJSX.TkBookmarkBar & JSXBase.HTMLAttributes<HTMLTkBookmarkBarElement>;
            "tk-bookmark-label": LocalJSX.TkBookmarkLabel & JSXBase.HTMLAttributes<HTMLTkBookmarkLabelElement>;
            "tk-bookmark-label-bar": LocalJSX.TkBookmarkLabelBar & JSXBase.HTMLAttributes<HTMLTkBookmarkLabelBarElement>;
            "tk-bookmark-list": LocalJSX.TkBookmarkList & JSXBase.HTMLAttributes<HTMLTkBookmarkListElement>;
            "tk-bookmark-list-item": LocalJSX.TkBookmarkListItem & JSXBase.HTMLAttributes<HTMLTkBookmarkListItemElement>;
            "tk-bookmark-table": LocalJSX.TkBookmarkTable & JSXBase.HTMLAttributes<HTMLTkBookmarkTableElement>;
            "tk-label-list": LocalJSX.TkLabelList & JSXBase.HTMLAttributes<HTMLTkLabelListElement>;
            "tk-table": LocalJSX.TkTable & JSXBase.HTMLAttributes<HTMLTkTableElement>;
        }
    }
}
