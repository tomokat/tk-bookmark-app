/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppRoot {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface TkAddLabel {
    }
    interface TkAddOrEditBookmark {
        "bookmark": any;
        "forNewBookmark": boolean;
    }
    interface TkBookmark {
    }
    interface TkBookmarkBar {
    }
    interface TkBookmarkLabel {
    }
    interface TkBookmarkLabelBar {
    }
    interface TkBookmarkList {
        "isEditMode": boolean;
        "reloadBookmarkList": () => Promise<void>;
    }
    interface TkBookmarkListItem {
        "bookmark": any;
    }
    interface TkLabelList {
        "isEditMode": boolean;
        "reloadLabelList": () => Promise<void>;
    }
}
export interface TkAddLabelCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkAddLabelElement;
}
export interface TkAddOrEditBookmarkCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkAddOrEditBookmarkElement;
}
export interface TkBookmarkBarCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkBookmarkBarElement;
}
export interface TkBookmarkLabelBarCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkBookmarkLabelBarElement;
}
export interface TkBookmarkListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkBookmarkListElement;
}
export interface TkBookmarkListItemCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkBookmarkListItemElement;
}
export interface TkLabelListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLTkLabelListElement;
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLTkAddLabelElement extends Components.TkAddLabel, HTMLStencilElement {
    }
    var HTMLTkAddLabelElement: {
        prototype: HTMLTkAddLabelElement;
        new (): HTMLTkAddLabelElement;
    };
    interface HTMLTkAddOrEditBookmarkElement extends Components.TkAddOrEditBookmark, HTMLStencilElement {
    }
    var HTMLTkAddOrEditBookmarkElement: {
        prototype: HTMLTkAddOrEditBookmarkElement;
        new (): HTMLTkAddOrEditBookmarkElement;
    };
    interface HTMLTkBookmarkElement extends Components.TkBookmark, HTMLStencilElement {
    }
    var HTMLTkBookmarkElement: {
        prototype: HTMLTkBookmarkElement;
        new (): HTMLTkBookmarkElement;
    };
    interface HTMLTkBookmarkBarElement extends Components.TkBookmarkBar, HTMLStencilElement {
    }
    var HTMLTkBookmarkBarElement: {
        prototype: HTMLTkBookmarkBarElement;
        new (): HTMLTkBookmarkBarElement;
    };
    interface HTMLTkBookmarkLabelElement extends Components.TkBookmarkLabel, HTMLStencilElement {
    }
    var HTMLTkBookmarkLabelElement: {
        prototype: HTMLTkBookmarkLabelElement;
        new (): HTMLTkBookmarkLabelElement;
    };
    interface HTMLTkBookmarkLabelBarElement extends Components.TkBookmarkLabelBar, HTMLStencilElement {
    }
    var HTMLTkBookmarkLabelBarElement: {
        prototype: HTMLTkBookmarkLabelBarElement;
        new (): HTMLTkBookmarkLabelBarElement;
    };
    interface HTMLTkBookmarkListElement extends Components.TkBookmarkList, HTMLStencilElement {
    }
    var HTMLTkBookmarkListElement: {
        prototype: HTMLTkBookmarkListElement;
        new (): HTMLTkBookmarkListElement;
    };
    interface HTMLTkBookmarkListItemElement extends Components.TkBookmarkListItem, HTMLStencilElement {
    }
    var HTMLTkBookmarkListItemElement: {
        prototype: HTMLTkBookmarkListItemElement;
        new (): HTMLTkBookmarkListItemElement;
    };
    interface HTMLTkLabelListElement extends Components.TkLabelList, HTMLStencilElement {
    }
    var HTMLTkLabelListElement: {
        prototype: HTMLTkLabelListElement;
        new (): HTMLTkLabelListElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "my-component": HTMLMyComponentElement;
        "tk-add-label": HTMLTkAddLabelElement;
        "tk-add-or-edit-bookmark": HTMLTkAddOrEditBookmarkElement;
        "tk-bookmark": HTMLTkBookmarkElement;
        "tk-bookmark-bar": HTMLTkBookmarkBarElement;
        "tk-bookmark-label": HTMLTkBookmarkLabelElement;
        "tk-bookmark-label-bar": HTMLTkBookmarkLabelBarElement;
        "tk-bookmark-list": HTMLTkBookmarkListElement;
        "tk-bookmark-list-item": HTMLTkBookmarkListItemElement;
        "tk-label-list": HTMLTkLabelListElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface TkAddLabel {
        "onAddLabelSuccess"?: (event: TkAddLabelCustomEvent<any>) => void;
    }
    interface TkAddOrEditBookmark {
        "bookmark"?: any;
        "forNewBookmark"?: boolean;
        "onAddBookmarkSuccess"?: (event: TkAddOrEditBookmarkCustomEvent<any>) => void;
        "onNotifyUpdateRequestObject"?: (event: TkAddOrEditBookmarkCustomEvent<any>) => void;
    }
    interface TkBookmark {
    }
    interface TkBookmarkBar {
        "onToggleBookmarkMode"?: (event: TkBookmarkBarCustomEvent<any>) => void;
    }
    interface TkBookmarkLabel {
    }
    interface TkBookmarkLabelBar {
        "onToggleLabelMode"?: (event: TkBookmarkLabelBarCustomEvent<any>) => void;
    }
    interface TkBookmarkList {
        "isEditMode"?: boolean;
        "onDeleteBookmarkSuccess"?: (event: TkBookmarkListCustomEvent<any>) => void;
        "onUpdateBookmarkSuccess"?: (event: TkBookmarkListCustomEvent<any>) => void;
    }
    interface TkBookmarkListItem {
        "bookmark"?: any;
        "onRequestEditBookmark"?: (event: TkBookmarkListItemCustomEvent<any>) => void;
    }
    interface TkLabelList {
        "isEditMode"?: boolean;
        "onDeleteLabelSuccess"?: (event: TkLabelListCustomEvent<any>) => void;
        "onUpdateLabelSuccess"?: (event: TkLabelListCustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "my-component": MyComponent;
        "tk-add-label": TkAddLabel;
        "tk-add-or-edit-bookmark": TkAddOrEditBookmark;
        "tk-bookmark": TkBookmark;
        "tk-bookmark-bar": TkBookmarkBar;
        "tk-bookmark-label": TkBookmarkLabel;
        "tk-bookmark-label-bar": TkBookmarkLabelBar;
        "tk-bookmark-list": TkBookmarkList;
        "tk-bookmark-list-item": TkBookmarkListItem;
        "tk-label-list": TkLabelList;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "tk-add-label": LocalJSX.TkAddLabel & JSXBase.HTMLAttributes<HTMLTkAddLabelElement>;
            "tk-add-or-edit-bookmark": LocalJSX.TkAddOrEditBookmark & JSXBase.HTMLAttributes<HTMLTkAddOrEditBookmarkElement>;
            "tk-bookmark": LocalJSX.TkBookmark & JSXBase.HTMLAttributes<HTMLTkBookmarkElement>;
            "tk-bookmark-bar": LocalJSX.TkBookmarkBar & JSXBase.HTMLAttributes<HTMLTkBookmarkBarElement>;
            "tk-bookmark-label": LocalJSX.TkBookmarkLabel & JSXBase.HTMLAttributes<HTMLTkBookmarkLabelElement>;
            "tk-bookmark-label-bar": LocalJSX.TkBookmarkLabelBar & JSXBase.HTMLAttributes<HTMLTkBookmarkLabelBarElement>;
            "tk-bookmark-list": LocalJSX.TkBookmarkList & JSXBase.HTMLAttributes<HTMLTkBookmarkListElement>;
            "tk-bookmark-list-item": LocalJSX.TkBookmarkListItem & JSXBase.HTMLAttributes<HTMLTkBookmarkListItemElement>;
            "tk-label-list": LocalJSX.TkLabelList & JSXBase.HTMLAttributes<HTMLTkLabelListElement>;
        }
    }
}
